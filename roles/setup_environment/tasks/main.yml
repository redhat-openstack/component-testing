---
- name: Remove and create logs dir
  file: path={{ logs_dir | default(ansible_env.HOME) }}/logs/ state={{ item }}
  with_items:
    - absent
    - directory

# Load octario vars only when they were not passed already,
# so they are not overriden
- name: Load octario configuration
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ playbook_dir }}/../octario.yml"
    - "{{ inventory_dir }}/octario.yml"
    - "/etc/octario.yml"
  when: component is not defined

# To copy the component to remote host
- name: Install rsync
  become: yes
  yum:
    name='rsync'
    state=present

- name: Copy component to remote host
  synchronize:
    src="{{ item }}"
    dest="{{ ansible_env.HOME }}"
  with_first_found:
    - files:
      - "{{ component.path | default(omit) }}"
      - "{{ inventory_dir }}/{{ component.name }}"
      - "{{ inventory_dir }}/../{{ component.name }}"
      - "{{ playbook_dir }}/../{{ component.name }}"
      - "{{ hostvars['localhost']['test']['dir'] }}"
      skip: true
  no_log: true
  # to avoid spamming the console
  # remember that enabling ANSIBLE_DEBUG does disable no_log

- name: Load global vars
  ignore_errors: yes
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ playbook_dir }}/../components_config/common/global.yml"

- name: Creating component config parent and child helper facts
  set_fact:
    component_config_parent: "{{ component.name | regex_replace('(.*?)-(.*)', '\\1') }}"
    component_config_child: "{{ component.name | regex_replace('(.*?)-(.*)', '\\2') }}"

  # these 2 steps are optional since not every component has configuration in parent/child directory structure
- name: Load component's parent configuration
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ playbook_dir }}/../components_config/{{ component.version | default(rhos_default_version) }}/{{ component_config_parent }}/component.yml"
      skip: true

- name: Load component's child configuration
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ playbook_dir }}/../components_config/{{ component.version | default(rhos_default_version) }}/{{ component_config_parent }}/{{ component_config_child }}/component.yml"
      skip: true

  # this step is required so task to load component configuration by specific release doesn't not fail when we use parent/child config style
- name: Clean 'component_config_loaded' file
  file:
    path: /tmp/component_config_loaded
    state: absent

- name: Register component_config loaded from parent/child
  local_action: copy content="" dest=/tmp/component_config_loaded
  when: test_config is defined

# This is optional since not every component must have common configuration that applies to all releases
- name: Load component common configuration
  include_vars: "{{ item }}"
  ignore_errors: yes
  with_first_found:
    - files:
        - "{{ playbook_dir }}/../components_config/common/{{ component.name }}.yml"
        - "{{ inventory_dir }}/components_config/common/{{ component.name }}.yml"
      skip: true

- name: Load component configuration by specific release
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ playbook_dir }}/../components_config/{{ component.version | default(rhos_default_version) }}/{{ component.name }}/component.yml"
    - "{{ inventory_dir }}/components_config/{{ component.version | default(rhos_default_version) }}/{{ component.name }}/component.yml"
    - "{{ component.path | default(inventory_dir + '/' + component.name) }}/{{ component.config_file_name | default(config_file_name) }}"
    - "{{ playbook_dir }}/../component.yml"
    - "{{ inventory_dir }}/component.yml"
    - "/etc/component.yml"
    - "{{ component.path | default(inventory_dir + '/' + component.name) }}/jenkins-config.yml"
    - "{{ playbook_dir }}/../jenkins-config.yml"
    - "{{ inventory_dir }}/jenkins-config.yml"
    - "{{ inventory_dir }}/../{{ component.name }}/jenkins-config.yml"
    - "{{ playbook_dir }}/../{{ component.name }}/jenkins-config.yml"
    - "/etc/jenkins-config.yml"
    - "/tmp/component_config_loaded"

- name: Setup component configuration based on operating system
  set_fact:
    component_config="{{ ((test_config|default({})).virt|default({}))[item] | default(omit) }}"
  with_items:
    - "default"
    - "{{ ansible_os_family }}-{{ ansible_distribution_version | int }}"
    - "{{ ansible_os_family }}-{{ ansible_distribution_version }}"

- name: Display all variables/facts known for a host
  debug:
    var: hostvars[inventory_hostname]
    verbosity: 2