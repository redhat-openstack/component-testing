#!/bin/bash
set -euox pipefail

{% if pool_name is defined and pool_name %}
  pool_name={{ pool_name | quote }}
{% else %}
  source {{ rc_file | default('/home/stack/stackrc') }} || true
  # Get default floating IP pool name
  controller=`nova list | grep controller | grep -o -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -n1`
  pool_name=`ssh -o "StrictHostKeyChecking no" heat-admin@$controller "sudo grep -oP \"(?<=default_floating_pool=)(.*$)\" /etc/nova/nova.conf" | tail -n1`
{% endif %}

{% if sched_filters is defined and sched_filters %}
  nova_sched_filters={{ sched_filters | quote }}
{% else %}
  source {{ rc_file | default('/home/stack/stackrc') }} || true
  # Use scheduler filters from nova.conf
  # By default "all" scheduler filters are used in Tempest which causes some
  # tests to fail.
  #
  nova_sched_filters=$(sudo sed -n '/^scheduler_default_filters=/p' /etc/nova/nova.conf | cut -f2 -d=)
{% endif %}

source {{ rc_file | default(overcloud_rc_file) }}

# Discover number of overcloud compute nodes that are in Running power state
# This is required by tempest migration tests
#
min_compute_nodes=$(nova list --name compute |grep -c Running || true)

# Create external network
# -----------------------
if [[ "$(neutron net-list --name public | grep -v -e '^$' | wc -l || true)" -eq "0" ]]; then
  neutron net-create $pool_name \
          --router:external=True \
          --provider:network_type flat \
          --provider:physical_network datacentre
fi

public_net_id=$(neutron net-show $pool_name -f value -c id)

# Create external subnet
# ---------------------
neutron subnet-create \
        --name ext-subnet \
        --allocation-pool start=192.0.2.50,end=192.0.2.180 \
        --disable-dhcp --gateway 192.0.2.1 $pool_name 192.0.2.0/24


# Configure Tempest
# -----------------
{{ config_command | default("./tools/config_tempest.py") }}
./tools/config_tempest.py \
    --out etc/tempest.conf \
    --network-id ${public_net_id} \
    --debug \
    --create \
        identity.uri $OS_AUTH_URL \
        identity.admin_password $OS_PASSWORD \
        object-storage.operator_role {% if component_version|int < 7 %}SwiftOperator{% else %}swiftoperator{% endif%} \
        orchestration.stack_owner_role heat_stack_owner \
        compute.min_compute_nodes ${min_compute_nodes:-0} \
        compute-feature-enabled.scheduler_available_filters "${nova_sched_filters:-RetryFilter,AvailabilityZoneFilter,RamFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,CoreFilter}"
