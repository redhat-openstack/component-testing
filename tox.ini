# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs.
# This configuration file will run the test suite on all supported
# python versions.
# To use it, "pip install tox" and then run "tox" from this directory.

[tox]
envlist = py27,yamllint,flake8,ansible-lint,ansible-check,ansible-syntax-check
skipsdist = True
envdir = 
    2.7: {toxworkdir}/py27
    3.4: {toxworkdir}/py34
    3.5: {toxworkdir}/py35
    3.6: {toxworkdir}/py36

[testenv]
sitepackages = True
changedir = {toxinidir}
envdir = {toxworkdir}/py27
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
whitelist_externals =
    bash
    which
    ansible-playbook
commands =
    ansible-playbook {toxinidir}/tests/sample.yml
    # workaround for RHOSINFRA-699 : ir cannot be called from anywhere
    bash -c "cd `python -c 'import os, infrared; print(os.path.dirname(infrared.__file__))'`/.. && pwd && infrared octario --help >/dev/null"
    flake8: python -m flake8
    yamllint: bash -c "git ls-tree --full-tree --name-only -r HEAD . | grep -E '\.ya?ml$' | xargs python -m yamllint"
    ansible-lint: /bin/bash -c 'ansible-lint -x ANSIBLE0010 {toxinidir}/playbooks/*.yml'
    ansible-check: - bash -c "ANSIBLE_FORCE_COLOR=false ansible-playbook -i tests/hosts -v playbooks/*.yml --check >ansible-check.log 2>&1 || echo 'WARN:	Failure ignored failure because CI currently does not allow sudo on slaves.'"
    ansible-syntax-check: /bin/bash -c "/usr/bin/find ./playbooks -name '*.yml' | /usr/bin/xargs -n1  ansible-playbook -i tests/hosts --syntax-check --list-tasks -v"
passenv =
    SSH_AUTH_SOCK
    USER
