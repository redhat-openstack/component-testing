# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs.
# This configuration file will run the test suite on all supported
# python versions.
# To use it, "pip install tox" and then run "tox" from this directory.

[tox]
# func is not mentioned in the default set because it needs extra config
envlist = py27,yamllint,flake8,ansible-lint,ansible-check,ansible-syntax-check
skipsdist = True

[testenv]
sitepackages = False
# TODO: make sitepackages = True as soon we have RHOSINFRA-1562 fixed
# which can cause failures to infrared messing shade dependencies even when
# the system has a correctly working shade version.

changedir = {toxinidir}
envdir = {toxworkdir}/py27
deps =
  -chttps://raw.githubusercontent.com/redhat-openstack/infrared/master/requirements.txt
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
whitelist_externals =
    bash
    which
    ansible-playbook
commands =
    pip install -q -e {toxinidir}
    pip --version && ansible --version && ansible-playbook {toxinidir}/tests/sample.yml
    # TODO: add here code to run octario playbooks via docker or infrared
    flake8: python -m flake8
    yamllint: bash -c "git ls-tree --full-tree --name-only -r HEAD | grep -E '\.ya?ml$' | xargs python -m yamllint -f parsable"
    # force color needed to improve readability of CI console logs
    # -p enables standardized (pep8 kind) output format which is easy to parse
    ansible-lint: /bin/bash -c 'ansible-lint --force-color -p -x ANSIBLE0010 {toxinidir}/playbooks/*.yml'
    ansible-check: - bash -c "ANSIBLE_FORCE_COLOR=false ansible-playbook -i tests/hosts -v playbooks/*.yml --check >ansible-check.log 2>&1 || echo 'WARN:	Failure ignored because CI currently does not allow sudo on slaves.'"
    ansible-syntax-check: /bin/bash -c "/usr/bin/find ./playbooks -name '*.yml' | /usr/bin/xargs -n1  ansible-playbook -i tests/hosts --syntax-check --list-tasks -v"
    func: bash -c "find {toxinidir} -iname runtests.sh -exec \{\} \;"
passenv =
    ANSIBLE_*
    BUILD_*
    COMPONENT_*
    DEBUG
    DISABLE_CLEANUP
    DNS
    JENKINS_*
    JOB_NAME
    OS_*
    PIP_DISABLE_PIP_VERSION_CHECK
    PPID
    SSH_AUTH_SOCK
    USER
    WORKSPACE
