{
  "comments": [
    {
      "key": {
        "uuid": "3ab451fb_b0b480d1",
        "filename": "cli/tester.py",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1004788
      },
      "writtenOn": "2016-12-12T11:51:45Z",
      "side": 1,
      "message": "1. This is not the full list of testers\n2. It\u0027s static. Which means each time we add new tester we need to modify the client code. Can we make it dynamic or is it too complex?",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 13
      },
      "revId": "117f9dcbdf711b9a43966d18157071ce8ec0185c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ab451fb_d034ac4b",
        "filename": "cli/tester.py",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1007069
      },
      "writtenOn": "2016-12-12T12:09:11Z",
      "side": 1,
      "message": "Arie,\nThis is very much intentional.\nWe can add here as many testers as we want, but it has to be supported and stable list of testers.\n\nSo yes this is the only place that will require modification if we want the CLI to support tester.\n\nFor other testers still \u0027old\u0027 ansible-playbook way is possible.\n\nThis way we can separate what we really want to support and stabilize vs new testers/custom testers.",
      "parentUuid": "3ab451fb_b0b480d1",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 13
      },
      "revId": "117f9dcbdf711b9a43966d18157071ce8ec0185c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ab451fb_0bb669dc",
        "filename": "cli/tester.py",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1004788
      },
      "writtenOn": "2016-12-12T14:23:24Z",
      "side": 1,
      "message": "Today, if I want to add a new tester I need to:\n1. Create a playbook for it\n2. Update readme\n3. Use it with at least one component (unless it\u0027s a general tester, but we don\u0027t have anything like that at the moment).\n\nNow you want to add 4. add to CLI source code.\n\nCan\u0027t we make it more dynamic by perhaps using the playbooks? support testers based on existing files/playbooks (\u003dtesters)\n\nI\u0027m just trying to figure out if we can avoid this additional maintenance/step",
      "parentUuid": "3ab451fb_d034ac4b",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 13
      },
      "revId": "117f9dcbdf711b9a43966d18157071ce8ec0185c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ab451fb_6bc72d46",
        "filename": "cli/tester.py",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1007069
      },
      "writtenOn": "2016-12-12T14:26:07Z",
      "side": 1,
      "message": "Arie,\nWe could either:\n\n1. add some extra value in the playbook itself (e.g. supported) and then CLI can print WARNING saying that some tester isn\u0027t really supported one, but still work or:\n\n2. move supported by the CLI testers into one folder and then custom/unsupported to another.",
      "parentUuid": "3ab451fb_0bb669dc",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 13
      },
      "revId": "117f9dcbdf711b9a43966d18157071ce8ec0185c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}