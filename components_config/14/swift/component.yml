# 'ln -f -s hack' is required to use the free (non patent guarded) version of  erasurecodes
unittest:
  rpm_deps: []
  run: >
      sudo ln -f -s /usr/lib64/liberasurecode_rs_vand.so.1.0.1 /usr/lib64/liberasurecode_rs_vand.so;
      sudo ln -f -s /usr/lib64/libXorcode.so.1.0.1 /usr/lib64/libXorcode.so;
      tox --sitepackages -v -epy27 -- --xunit-file=nosetests.xml --with-xunit test/unit 2>&1 | tee ../logs/testrun.log;

pep8:
  rpm_deps: [ bandit, pyflakes, python-pep8, python-flake8, python-hacking ]
  run: >
        which python3 || sudo ln -s `which python` /usr/bin/python3;
        git checkout -- test-requirements.txt requirements.txt;
        tox -v -e pep8 2>&1 | tee ../logs/testrun.log;


# python-swift is installed and then removed to satisfy all runtime
# dependencies for the swift component.

functional:
    rpm_deps: [
      openstack-swift,
      python-testresources,
      python-os-testr,
      python-oslotest,
    ]

    remove_rpm: [
      python-swift,
    ]

    run: |
        #!/bin/bash
        set -exuo pipefail
       
        if [ -f ~/overcloudrc ]; then
          # configure swift to be able to run functional tests, based on:
          # https://thiagodasilvablog.wordpress.com/2016/11/02/running-functional-test-against-an-openstack-swift-cluster-deployed-with-tripleo/

          source ~/overcloudrc

          which crudini 2>&1 > /dev/null || sudo yum install -q -y crudini

          openstack project create  --or-show --description "Bob Project" bob
          openstack user create  --or-show --password bobpwd bob

          openstack role assignment list --project bob --user bob  --names -c Role -f value | grep admin >/dev/null || openstack role add --project bob --user bob admin

          openstack role create user  --or-show
          openstack user create  --or-show --password jimpwd jim

          openstack role assignment list --project admin --user jim  --names -c Role -f value | grep user >/dev/null || openstack role add --project admin --user jim user

          cp -f /home/stack/swift/test/sample.conf /home/stack/swift/test.conf
          export SWIFT_TEST_CONFIG_FILE=/home/stack/swift/test.conf

          os_hostname=$(echo $OS_AUTH_URL | awk -F[/:] '{print $4}')
          os_port="$(echo $OS_AUTH_URL | sed -e 's,^.*:,:,g' -e 's,.*:\([0-9]*\).*,\1,g' -e 's,[^0-9],,g')"

          if [[ $OS_AUTH_URL == https* ]]; then
            os_ssl=yes
          fi
          
          crudini --set $SWIFT_TEST_CONFIG_FILE func_test auth_version 2
          crudini --set $SWIFT_TEST_CONFIG_FILE func_test auth_host $os_hostname
          crudini --set $SWIFT_TEST_CONFIG_FILE func_test auth_port $os_port
          crudini --set $SWIFT_TEST_CONFIG_FILE func_test auth_ssl ${os_ssl:-no}
          crudini --set $SWIFT_TEST_CONFIG_FILE func_test auth_prefix /v2.0/

          crudini --set $SWIFT_TEST_CONFIG_FILE func_test account admin
          crudini --set $SWIFT_TEST_CONFIG_FILE func_test username admin
          crudini --set $SWIFT_TEST_CONFIG_FILE func_test password "$OS_PASSWORD"

          crudini --set $SWIFT_TEST_CONFIG_FILE func_test account2 bob
          crudini --set $SWIFT_TEST_CONFIG_FILE func_test username2 bob
          crudini --set $SWIFT_TEST_CONFIG_FILE func_test password2 bobpwd

          crudini --set $SWIFT_TEST_CONFIG_FILE func_test username3 jim
          crudini --set $SWIFT_TEST_CONFIG_FILE func_test password3 jimpwd
        
          ./.functests 2>&1 | tee ../logs/testrun.log
        else
          tox --sitepackages -v -e func-s3api 2>&1 | tee ../logs/testrun.log
        fi

tempest:
   rpm_deps: [ python-swift-tests ]
   remove_rpm: []
   run: ""
   blacklist: []

# Additional repository required to install testing dependencies
enable_repos: ['rhelosp-rhel-7.6-server']

# Note: The order of packages is important
rpm_deps_common: [
  git,
  python-tox,
  python-virtualenv,
  python-py,
  python2-pluggy,
  gcc,
  python-devel,
  python-pip,
  python-pbr,
  python-dns,
  python-eventlet,
  python-greenlet,
  python-netifaces,
  python-paste-deploy,
  python-simplejson,
  python-six,
  libffi-devel,
  pyxattr,
  python-pyeclib,
  python2-cryptography,
  openstack-swift-account,
  openstack-swift-container,
  openstack-swift-object,
  openstack-swift-proxy,
  python-requests-mock
]

# Note: we need python-nose-1.3.7 to be installed because test_PUT_send_exception_with_unicode_path
# fails on issue described at https://github.com/nose-devs/nose/issues/680
rpm_deps_tests_req: [
  python-coverage,
  python-nose-1.3.7,
  python-oslo-sphinx,
  python-sphinx,
  python-mock,
  python-swiftclient,
  python-keystoneclient,
  python-boto
]

rpm_deps_7: [
  "{{rpm_deps_tests_req}}",
  "{{rpm_deps_common}}",
  "{{ hostvars[inventory_hostname][tester.component.tox_target]['rpm_deps'] }}"
]

rpm_remove: [
  openstack-swift-account,
  openstack-swift-container,
  openstack-swift-object,
  openstack-swift-proxy
]

# NSS_HASH_ALG_SUPPORT and OPENSSL_ENABLE_MD5_VERIFY are required by erasurecodes
# NOSE_WITH_XUNIT set to provide test results in the standard XUnit XML format
virt_run_config:
  run: >
    set -o pipefail;
    sudo rm -Rf .tox;
    export NSS_HASH_ALG_SUPPORT=+MD5;
    export OPENSSL_ENABLE_MD5_VERIFY=1;
    truncate --size 0 requirements.txt;
    truncate --size 0 test-requirements.txt;
    rpm -qa | sort > ../logs/installed-rpms.log;
    export NOSE_WITH_XUNIT=1;
    {{ hostvars[inventory_hostname][tester.component.tox_target]['run'] }}

  archive:
    - nosetests.xml

### actual test_config: starts here: used by khaleesi ###
### NOTE: test_config.virt must be defined ###
test_config:
  virt:
    RedHat-7:
      setup:
        install: "{{rpm_deps_7}}"
        remove: "{{rpm_remove}}"
        enable_repos: "{{enable_repos}}"
      run: "{{virt_run_config.run}}"
      archive: "{{virt_run_config.archive}}"
